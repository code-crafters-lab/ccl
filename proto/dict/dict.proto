syntax = "proto3";

package ccl.dict.v1;

import "proto/common/category.proto";


message Dict {
    uint64 id = 1;      // 字典 ID
    uint64 cid = 2;      // 分类 ID
    string code = 3;    // 编码
    string name = 4;    // 名称
    sint32 sort = 5;    // 排序
    bool disabled = 6;  // 是否禁用
    string remark = 7;  // 备注
    bytes ext_json = 8; // 扩展配置
    ValueType value_type = 9; // 字典存储值类型
    repeated Item items = 12; // 字典项
    string tenant_id = 10; // 租户 ID

    enum ValueType {
        STRING = 1;
        NUMBER = 2;
        BOOLEAN = 3;
    }

    message Item {
        uint64 id = 1; // 字典项 id
        uint64 dict_id = 2; // 字典 id
        string code = 3; // 编码;
        oneof value {
            string string_value = 4;
            sint32 number_value = 5;
            bool boolean_value = 6;
        } // 实际值
        string name = 7; // 显示值
        sint32 sort = 8; // 排序
        bool disabled = 9; // 是否禁用
        bool inner = 10; // 是否内部
        string remark = 11; // 备注
        bytes ext_json = 12; // 扩展配置
    }
}

message DictTree {
    int64 id = 1;
    int64 pid = 2;
    string name = 3;
    sint32 sort = 4;
    uint32 level = 5;
    bool is_leaf = 6;
    NodeType node_type = 7;
    TreeNode node = 8;
    repeated DictTree children = 9;

    // 字典树节点类型
    enum NodeType {
        CATEGORY = 0; // 分类
        DICT = 1; // 字典
        ITEM = 2; // 字典项
    }

    message TreeNode {
        oneof data {
            Dict dict = 1;
            Dict.Item item = 2;
            common.Category category = 3;
        }
    }
}

message CreateDictRequest {
    uint64 category_id = 1; // 分类 id
    string code = 2; // 编码
    string name = 3; // 名称
    string remark = 4; // 备注
    Dict.ValueType value_type = 5; // 值类型
}


// 数据字典服务
service DataDictionaryService {
    //    rpc GetDataElement(GetDataElementRequest) returns (GetDataElementResponse) {
    //        option (google.api.http) = {
    //            get: "/v1/elements/{element_id}"
    //        };
    //    }
    //
    //    rpc ListDataElements(ListDataElementsRequest) returns (ListDataElementsResponse) {
    //        option (google.api.http) = {
    //            get: "/v1/elements"
    //        };
    //    }
    //
    //    rpc CreateDataElement(CreateDataElementRequest) returns (CreateDataElementResponse) {
    //        option (google.api.http) = {
    //            post: "/v1/elements"
    //            body: "element"
    //        };
    //    }
    //
    //    rpc UpdateDataElement(UpdateDataElementRequest) returns (UpdateDataElementResponse) {
    //        option (google.api.http) = {
    //            put: "/v1/elements/{element.id}"
    //            body: "element"
    //        };
    //    }
    //
    //    rpc DeleteDataElement(DeleteDataElementRequest) returns (DeleteDataElementResponse) {
    //        option (google.api.http) = {
    //            delete: "/v1/elements/{element_id}"
    //        };
    //    }
}
