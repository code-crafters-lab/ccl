edition = "2023";

option go_package = "github.com/code-crafters-lab/idl/auth";
option java_package = "org.ccl.auth";
option java_outer_classname = "AuthorityProto";
option java_multiple_files = true;

package auth;

// 权限元数据：定义单个权限（对应二进制中的一位）
message AuthorityMetadata {
    // 权限唯一标识（如"read"、"write"，需全局唯一）
    string code = 1;
    // 权限描述（如"读取资源"）
    string description = 2;
    // 对应二进制位的索引（从 0 开始，如 0 → 第0位 → 2^0=1）
    uint64 bit_index = 3;
    // 对应十进制值（2^bit_index，如bit_index=0→1，bit_index=1→2）
    string decimal_value = 4;
    // 对应十六进制值（2^bit_index，如bit_index=0→1，bit_index=1→2）
    string hex_value = 5;
}

// 权限集：表示一组权限的组合（二进制位组合→十进制编码）
message PermissionSet {
    // 资源唯一标识（使用URN，如"urn:company:doc:id:12345"）
    string resource_urn = 1;
    // 权限组合的十进制编码（二进制位运算结果）
    uint64 permission_code = 2;
    // 该编码包含的权限项列表（可选，用于解析编码含义）
    repeated AuthorityMetadata included_permissions = 3;
    // 权限生效时间（可选，用于临时权限）
    int64 effective_time = 4;
    // 权限过期时间（可选，0表示永久有效）
    int64 expire_time = 5;
}

// 主体-资源权限映射：关联"谁（主体）对什么（资源）有什么权限"
message SubjectResourcePermission {
    // 主体类型（如"user"、"role"、"department"）
    string subject_type = 1;
    // 主体唯一标识（如用户ID"u1001"、角色ID"r_admin"）
    string subject_id = 2;
    // 主体对资源的权限集（一个主体可关联多个资源）
    repeated PermissionSet resource_permissions = 3;
}

// 权限定义表：系统中所有权限项的元数据集合（用于权限解析）
message PermissionDictionary {
    // 权限项列表（全局所有可用权限）
    repeated AuthorityMetadata all_permissions = 1;
    // 权限定义的版本（用于兼容升级）
    string version = 2;
}








