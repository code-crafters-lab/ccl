edition = "2023";

option go_package = "github.com/code-crafters-lab/idl/license";
option java_package = "org.ccl.license";
option java_outer_classname = "LicenseBytecodeProto";
option java_multiple_files = true;
option objc_class_prefix = "LicenseBytecode";

package license;

import "google/protobuf/any.proto";

// 文件头结构(固定位 20 字节)
message LicenseHeader {
    bytes magic_number = 1;             // 标识文件类型（4字节），固定为 0xCC4C9A9B
    uint32 minor_version = 2;           // 次要版本号，无符号 8 位整数
    uint32 major_version = 3;           // 主要版本号，无符号 8 位整数
    uint32 constant_pool_count = 4;     // 常量池计数，无符号 16 位整数
    uint32 payload_offset = 5;          // 授权信息块偏移，无符号 32 位整数
    uint32 security_offset = 6;         // 安全块偏移，无符号 32 位整数
    uint32 total_length = 7;            // 文件总长度，无符号 32 位整数
    reserved 8 to 10;
}

// 常量池项
message ConstantPoolItem {
    enum ConstantType {
        CONSTANT_UNKNOW = 0;
        CONSTANT_UTF8 = 1;
        CONSTANT_INTEGER = 2;
        CONSTANT_LONG = 3;
        CONSTANT_FLOAT = 4;
        CONSTANT_DOUBLE = 5;
    }
    ConstantType tag = 1;
    bytes data = 2;
}

// 授权内容
message LicensePayload {
    string license_id = 1;           // 授权ID（UUID或自定义格式）
    string product_id = 2;          // 产品标识
    LicenseType license_type = 3 [default = LICENSE_TYPE_PERSONAL];   // 授权类型
    uint64 expiry_time = 4;         // 过期时间（Unix时间戳）
    repeated bytes hardware_fingerprint = 5; // 硬件指纹（用于设备绑定）

    // 功能模块控制（兼容32位和扩展格式）
    oneof feature_control {
        uint32 feature_mask_32 = 6;   // 32位功能掩码
        uint64 feature_mask_64 = 7;   // 64位功能掩码
        FeatureRegistry feature_registry = 8; // 新版功能注册表
    }

    reserved 9, 10;

    // 附加信息（键值对）
    map<string, string> extra_info = 11;
}

// 授权类型枚举
enum LicenseType {
    // 未指定类型
    LICENSE_TYPE_UNSPECIFIED = 0;
    // 个人版：面向个人用户，功能有限
    LICENSE_TYPE_PERSONAL = 1;
    // 标准版(SE)：基础商业版本，包含核心功能
    LICENSE_TYPE_STANDARD = 2;
    // 专业版(PE)：面向专业用户，提供高级功能
    LICENSE_TYPE_PROFESSIONAL = 3;
    // 企业版(EE)：面向企业用户，支持多用户和高级管理功能
    LICENSE_TYPE_ENTERPRISE = 4;
    // 定制版：根据特定需求定制的版本
    LICENSE_TYPE_CUSTOM = 5;
}

// 签名信息
message LicenseSignature {
    SignatureAlgorithm algorithm = 1; // 签名算法
    bytes signature = 2;              // 签名值
    bytes public_key = 3;             // 公钥（可选）
}

// 安全块
message SecurityBlock {
    uint32 signature_algorithm = 1;
    uint32 signature_length = 2;
    bytes signature_data = 3;
    uint32 encryption_algorithm_id = 4;
    uint32 encrypted_data_length = 5;
    bytes encrypted_data = 6;
}

// 签名算法枚举
enum SignatureAlgorithm {
    SIGNATURE_ALGORITHM_UNSPECIFIED = 0;
    SIGNATURE_ALGORITHM_RSA_SHA256 = 1;   // RSA-SHA256
    SIGNATURE_ALGORITHM_ECDSA_P256 = 3;   // ECDSA-P256
    SIGNATURE_ALGORITHM_HMAC_SHA256 = 4;  // HMAC-SHA256
}

// 完整授权文件结构
message LicenseFile {
    LicenseHeader header = 1;                       // 文件头
    repeated ConstantPoolItem constant_pool = 2;    // 常量池
    LicensePayload payload = 3;                     // 授权内容
    LicenseSignature signature = 4;                 // 签名信息
    repeated google.protobuf.Any extensions = 5;    // 扩展字段（使用Google的Any类型）
}

// 功能点信息
message FeatureInfo {
    uint64 mask = 1;            // 功能点掩码（64位，解决32位不足问题）
    string name = 2;            // 功能点名称（唯一标识）
    string description = 3;     // 功能点描述
    repeated string group = 4;  // 功能点分组（如 "security", "network"）
}

// 功能点注册表
message FeatureRegistry {
    uint32 version = 1;        // 版本号（用于兼容性管理）
    repeated FeatureInfo features = 2; // 功能点列表
}